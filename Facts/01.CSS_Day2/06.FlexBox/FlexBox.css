/* Most element on the page are block level element like h1 h2 h3 h4 h5 h6 ,div..etc
which means they occupy the 100% width of screen 

other are inline element which occupy space needed by content like button,input,span,strong etc

Now the inline tag like spam wont follow text-align property cause todo that they need space
and since inline tag only take space required to show the content text-align:center won't work

that is only true if we apply that property onto individual inline tag

ex:
<div>
    <span>Hello</span>
</div>

So if we apply css to span tag like below :
span{text-align:center;}

This wont work as the span tag dont have enough space to adjust text inside of the tag

but if we apply the css on <div> tag which the parent tag of <span> the css will work cause

for div there is space as it is block element and the whole span tag and it's content will act 
as a text 


<div>
    <span>Hello</span>
</div>

div{text-align:center;}

Next Point is that every inline element like span , button and input act as a text 
so text properties will work on all like text-align

we can convert a block element into inline element and then inline element to block element using
display property

display:inline; or use display:block;
*/
*
{
    margin:0px;
    padding: 0px;
    box-sizing: border-box;
}
body
{
    background-color: #292524;
    color : white;
    font-family:"Sono",sans-serif;
    padding: 50px;
}
.header1
{
    margin-bottom: 40px;
    /* text-align: center; */
    display:flex;  /*Will convert our header tag into flex container and all the items
    inside the header tag will be flex-item*/
    align-items: center; /*will align all item in center
    /* Now all the flex property which we want to set for the item should be set for that tag
    ie 
    suppose 
    <header>
        <h1></h1>
        <img>
    </header>

    Now if we set header{display:flex} //header is now a flex container and h1 is flex item
    and if we want to set flex property on h1 we have to set it by using h1 selector and not the
    flex container

    h1{order:2} // will put h1 in 2nd position and img in first
     */

     /* another flex container property is justify-content which basicaly adjust whole content 
     inside the container like from where to start or end  */
     justify-content:space-between;
     /* this will place the first item and start and fill the space b/w as much as it can */
}
.Logo
{
    /* display: inline-block; */
    /* border: 10px solid red; */
    /* padding:0px 300px 0px 0px; */
    /* margin-right:500px; */
    /* So now although or website starts looking similar to goal site we have manually layed out
    the structure via changing display and box property of the div  */

    /* But it's not efficient way todo so,instead we can use css layout like flex and grid  */
    order:0;
    display:flex;
    align-items: center;
    gap: 15px;
}
h1
{
    font-size:45px;
    text-transform: uppercase;
    /* text-align: center; */
    font-family:'Coiny',sans-serif;
    color:white;
    /* background-color: red; */

    /* so as we can see that the red color is filled in line and not just in the part where 
    Facts-Today is written */
    /* display: inline-block; */
    line-height:1;
    margin-top:8px;
    margin-left:10px;
}
.fact-form
{
    background-color: #44403c;
    margin-bottom: 40px;
    padding:20px 50px;
    text-align: center;
}
.facts
{
    font-size: 20px;
    line-height: 1.4;
    background-color: #44403c;
    margin-bottom:20px;
    padding:25px;
    border:10px solid red;
}

button
{
    font-family:'Coiny';
}
ul{
    list-style: none;
}
.category
{
    text-transform:uppercase;
    font-size: 15px;
    font-family: "Coiny",sans-serif;
    /* color: red; */
    /* background-color:yellow; */
    /* Since span is a inline tag only the part in which
    category is written is filled with yellow and not whole line */
    padding: 3px 10px 0px 10px;
    margin-left:30px;
}